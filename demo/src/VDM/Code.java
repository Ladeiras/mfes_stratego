//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-05 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "C:\\Users\\João\\Documents\\GitHub\\mfes_stratego\\VDM++\\Code.rtf".

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

package VDM;

import java.util.Map;
import java.util.List;
import java.util.HashMap;
import java.util.Iterator;
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class Code implements EvaluatePP {

// ***** VDMTOOLS START Name=str KEEP=NO
  public volatile String str = null;
// ***** VDMTOOLS END Name=str

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=CodeSentinel KEEP=NO
  class CodeSentinel extends Sentinel {

    public final int Code = 0;

    public final int nr_functions = 1;


    public CodeSentinel () throws CGException {}


    public CodeSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=CodeSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new CodeSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_Code KEEP=NO
  private void vdm_init_Code () {
    try {
      setSentinel();
      str = "  ";
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Code


// ***** VDMTOOLS START Name=Code KEEP=NO
  public Code () throws CGException {
    vdm_init_Code();
  }
// ***** VDMTOOLS END Name=Code


// ***** VDMTOOLS START Name=Code#2|Rank|Color KEEP=NO
  public Code (final Rank r, final Color c) throws CGException {
    vdm_init_Code();
    {
      Character rank = new Character('.');
      Character color = new Character('R');
      String selRes_6 = (r.name);
      boolean succ_3 = false;
      {
        /* "two" */
        succ_3 = (UTIL.equals(selRes_6, new String("two")));
        if (succ_3) {
          rank = new Character('2');
        }
      }
      if (!succ_3) {
        /* "three" */
        succ_3 = (UTIL.equals(selRes_6, new String("three")));
        if (succ_3) {
          rank = new Character('3');
        }
      }
      if (!succ_3) {
        /* "four" */
        succ_3 = (UTIL.equals(selRes_6, new String("four")));
        if (succ_3) {
          rank = new Character('4');
        }
      }
      if (!succ_3) {
        /* "five" */
        succ_3 = (UTIL.equals(selRes_6, new String("five")));
        if (succ_3) {
          rank = new Character('5');
        }
      }
      if (!succ_3) {
        /* "six" */
        succ_3 = (UTIL.equals(selRes_6, new String("six")));
        if (succ_3) {
          rank = new Character('6');
        }
      }
      if (!succ_3) {
        /* "seven" */
        succ_3 = (UTIL.equals(selRes_6, new String("seven")));
        if (succ_3) {
          rank = new Character('7');
        }
      }
      if (!succ_3) {
        /* "eight" */
        succ_3 = (UTIL.equals(selRes_6, new String("eight")));
        if (succ_3) {
          rank = new Character('8');
        }
      }
      if (!succ_3) {
        /* "nine" */
        succ_3 = (UTIL.equals(selRes_6, new String("nine")));
        if (succ_3) {
          rank = new Character('9');
        }
      }
      if (!succ_3) {
        /* "ten" */
        succ_3 = (UTIL.equals(selRes_6, new String("ten")));
        if (succ_3) {
          rank = new Character('M');
        }
      }
      if (!succ_3) {
        /* "spy" */
        succ_3 = (UTIL.equals(selRes_6, new String("spy")));
        if (succ_3) {
          rank = new Character('S');
        }
      }
      if (!succ_3) {
        /* "bomb" */
        succ_3 = (UTIL.equals(selRes_6, new String("bomb")));
        if (succ_3) {
          rank = new Character('B');
        }
      }
      if (!succ_3) {
        /* "flag" */
        succ_3 = (UTIL.equals(selRes_6, new String("flag")));
        if (succ_3) {
          rank = new Character('F');
        }
      }
      if (!succ_3) {
        /* "water" */
        succ_3 = (UTIL.equals(selRes_6, new String("water")));
        if (succ_3) {
          rank = new Character('W');
        }
      }
      if (!succ_3) {
        /* "null" */
        succ_3 = (UTIL.equals(selRes_6, new String("null")));
        if (succ_3) {
          rank = new Character('-');
        }
      }
      String selRes_38 = (c.name);
      boolean succ_35 = false;
      {
        /* "red" */
        succ_35 = (UTIL.equals(selRes_38, new String("red")));
        if (succ_35) {
          color = new Character('R');
        }
      }
      if (!succ_35) {
        /* "blue" */
        succ_35 = (UTIL.equals(selRes_38, new String("blue")));
        if (succ_35) {
          color = new Character('B');
        }
      }
      if (!succ_35) {
        /* "null" */
        succ_35 = (UTIL.equals(selRes_38, new String("null")));
        if (succ_35) {
          color = new Character('-');
        }
      }
      Map modmap_48 = new HashMap();
      modmap_48.put(new Integer(1), rank);
      modmap_48.put(new Integer(2), color);
      Map modmap_46 = modmap_48;
      List rhs_45 = UTIL.ConvertToList(str);
      Map tmpMap_56 = new HashMap(modmap_46);
      for (Iterator enm_57 = tmpMap_56.keySet().iterator(); enm_57.hasNext(); ) {
        Object dom_58 = enm_57.next();
        Number edom_53 = UTIL.NumberToInt(dom_58);
        Character erng_54 = (Character)tmpMap_56.get(dom_58);
        if (edom_53.intValue() > rhs_45.size() || edom_53.intValue() < 1) 
          UTIL.RunTime("Illegal index in sequence modifier");
        else 
          rhs_45.set(edom_53.intValue() - 1, erng_54);
      }
      str = UTIL.ConvertToString(UTIL.clone(UTIL.ConvertToString(rhs_45)));
    }
  }
// ***** VDMTOOLS END Name=Code#2|Rank|Color

}
;
